name: Deploy Proxy

on:
  workflow_dispatch:
  push:
    tags: v*.*.*-proxy

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/proxy
          tags: type=ref,event=tag
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./proxy16/
          file: ./proxy16/dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  
  deploy:
    needs: build
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [proxy.5]
    steps:
      - name: Pull && Up Container
        run: /proxy_pull_up.sh



  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Adding Known Hosts
  #       run: |
  #         mkdir ~/.ssh
  #         ssh-keyscan -H ${{ secrets.PROXY_SERVER_1 }} >> ~/.ssh/known_hosts
  #         ssh-keyscan -H ${{ secrets.PROXY_SERVER_2 }} >> ~/.ssh/known_hosts
  #         ssh-keyscan -H ${{ secrets.PROXY_SERVER_3 }} >> ~/.ssh/known_hosts
  #     - name: Install SSH Key
  #       uses: shimataro/ssh-key-action@v2
  #       with:
  #         key: ${{ secrets.PROXY_SERVER_TOKEN }}
  #         known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
  #     - name: Deploy to servers
  #       run: |
  #         ssh ${{ secrets.PROXY_SERVER_USERNAME }}@${{ secrets.PROXY_SERVER_1 }} 'cd ~/docker && dc pull proxy && dc up -d proxy'
  #         ssh ${{ secrets.PROXY_SERVER_USERNAME }}@${{ secrets.PROXY_SERVER_2 }} 'cd ~/docker && dc pull proxy && dc up -d proxy'
  #         ssh ${{ secrets.PROXY_SERVER_USERNAME }}@${{ secrets.PROXY_SERVER_3 }} 'cd ~/docker && dc pull proxy && dc up -d proxy'
          
        
